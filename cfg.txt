T => Statement
Statement -> AssignStatement | IfStatement| FunctionStatement | Expr 
AssignStatement -> TokVar = Expr
IfStatement -> TokIf Expr TokColon TokIndent Statement+ TokDedent ElseStatement
    Indent must be same length as dedent
ElseStatement -> TokElse TokColon TokIndent Statement+ TokDedent
FunctionStatement -> TokDef TokVar ( TokVarTokComma* ) TokColon TokIndent Statement+  TokDedent

ReturnExpr -> TokReturn Expr | Expr
Expr -> AndExpr TokOr Expr | AndExpr
AndExpr -> EqualityExpr TokAnd AndExpr | EqualityExpr
EqualityExpr -> RelationalExpr EqualityOperator EqualityExpr | RelationalExpr
    EqualityOperator -> == | !=
RelationalExpr -> AdditiveExpr RelationalOperator RelationalExpr | AdditiveExpr
    RelationalOperator -> < | > | <= | >=
AdditiveExpr -> MultiplicativeExpr AdditiveOperator AdditiveExpr | MultiplicativeExpr TokUnaryMinus NumericalExpr | MultiplicativeExpr
    AdditiveOperator -> + | -
MultiplicativeExpr -> UnaryExpr MultiplicativeOperator MultiplicativeExpr | UnaryExpr
    MultiplicativeOperator -> * | /
UnaryExpr -> TokUnaryMinus FunctionCallExpr | TokNot FunctionCallExpr | FunctionCallExpr
FunctionCallExpr -> TokVar TokLParen (Expr TokComma)* TokRParen | PrimaryExpr
PrimaryExpr -> TokInt | TokFloat | TokBool | TokVar | ( Expr )


Expr types:
Int of n
Float of d
Bool of b
Binop of (op, expr, expr)
- Add
- Sub
- Mult
- Div